/**
 * 数组：
 * 根据元素查找对应位置 先对数组进行排序，再进行二分查找 提高效率
 * 
 * 缺点，要先排序生成有序数组，才能提高查找效率
 * 删除和插入数据的时候要大量的位移操作，效率很低
 * 
 * 哈希表缺点：空间利用率不高 底层使用的是数组
 * 元素是无序的，不能按照固定的顺序来遍历
 * 不能快速找出哈希表中最大值或最小值等特殊的值
 * 
 */

 /**
  * 二叉树第i层最大节点数为 2^(i-1)
  * 深度为k的二叉树 最大节点数为 2^k-1
  * 对于任何非空二叉树T，n0表示叶节点的个数 n2是度为2的非叶节点的个数 n0 = n2 + 1
  */

  /**
   * 完美二叉树
   * 完全二叉树 不能缺少左侧节点
   * 
   */

   /**
    * 数组存储二叉树会造成空间浪费，所以使用链表存储二叉树
    */

    /**
     * 二叉搜索树
     * 非空左子树的所有键值小于其根节点的键值
     * 非空右子树的所有键值大于其根节点的键值
     * 左，右树本身也都是二叉搜索树
     */